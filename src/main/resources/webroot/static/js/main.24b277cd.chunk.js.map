{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","showMask","setShowMask","divs","className","onClick","e","push","stopPropagation","type","accept","onChange","file","target","files","item","formData","FormData","append","fetch","method","body","then","res","status","window","location","reload","alert","console","error","catch","url","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAwDeA,MAnDf,WAEE,MAA8BC,oBAAS,GAAvC,mBAAKC,EAAL,KAAeC,EAAf,KA0BIC,EAAO,CACT,wBAAQC,UAAU,kBAAkBC,QAzBtC,SAAqBC,GACnBJ,GAAaD,IAwBb,2BAcF,OAZIA,GACFE,EAAKI,KACH,qBAAKH,UAAU,OAAOC,QAAS,kBAAMH,GAAY,IAAjD,SACE,qBAAKE,UAAU,OAAOC,QAAU,SAAAC,GAAC,OAAGA,EAAEE,mBAAtC,SACE,sBAAKJ,UAAU,OAAf,UACE,yDACA,uBAAOK,KAAK,OAAOC,OAAO,mBAAmBC,SA7BvD,SAA0BL,GAAmC,IAAD,EACtDM,EAAI,UAAGN,EAAEO,OAAOC,aAAZ,aAAG,EAAgBC,KAAK,GAC5BC,EAAW,IAAIC,SACnBD,EAASE,OAAO,OAAQN,GACxBO,MAAM,gBAAiB,CACrBC,OAAQ,OACRC,KAAML,IACLM,MAAK,SAAAC,GACF,MAAQA,EAAIC,OACdC,OAAOC,SAASC,UAEhBC,MAAM,4BACNC,QAAQC,MAAM,SAAUP,OAEzBQ,OAAM,SAAAD,GACPF,MAAM,4BACNC,QAAQC,MAAM,SAAUA,iBAoB1B,sBAAK1B,UAAU,MAAf,UACGD,EACD,cAAC,IAAD,CAAW6B,IAAI,sBCrCNC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.24b277cd.chunk.js","sourcesContent":["import React, { useState, MouseEvent, ChangeEvent } from 'react';\nimport './App.css';\nimport SwaggerUI from \"swagger-ui-react\"\nimport \"swagger-ui-react/swagger-ui.css\"\n\nfunction App() {\n\n  let [showMask, setShowMask] = useState(false);\n\n  function handleClick(e: MouseEvent<HTMLButtonElement>) {\n    setShowMask(!showMask);\n  }\n\n  function handleFileChange(e: ChangeEvent<HTMLInputElement>) {\n    let file = e.target.files?.item(0);\n    let formData = new FormData();\n    formData.append('json', file!);\n    fetch(\"/swagger.json\", {\n      method: \"POST\",\n      body: formData\n    }).then(res => {\n      if (200 === res.status) {\n        window.location.reload();\n      } else {\n        alert(\"error. Check the console\");  \n        console.error('Error:', res);\n      }\n    }).catch(error => {\n      alert(\"error. Check the console\");\n      console.error('Error:', error);\n    })\n  }\n\n  let divs = [\n    <button className=\"floating-action\" onClick={handleClick}>更新</button>\n  ];\n  if (showMask) {\n    divs.push(\n      <div className=\"mask\" onClick={() => setShowMask(false)}>\n        <div className=\"menu\" onClick={ e=> e.stopPropagation() }>\n          <div className=\"line\">\n            <label>Update Swagger Json:</label>\n            <input type=\"file\" accept=\"application/json\" onChange={handleFileChange} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"App\">\n      {divs}\n      <SwaggerUI url=\"/swagger.json\" />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}